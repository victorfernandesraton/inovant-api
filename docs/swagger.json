{
    "swagger": "2.0",
    "info": {
        "description": "API server for inovantapp.",
        "title": "inovantapp API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {},
        "version": "1.0"
    },
    "host": "192.168.1.69:8080",
    "basePath": "/",
    "paths": {
        "/api/actions-verification": {
            "get": {
                "description": "Get ActionVerification list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "ActionVerification.List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter ActionVerifications by type [acveID]",
                        "name": "acveID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter ActionVerifications by type [userID]",
                        "name": "userID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter ActionVerifications by type [type]",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter ActionVerifications by type [verification]",
                        "name": "verification",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter ActionVerifications by type [createdAt[gte]]",
                        "name": "createdAt[gte]",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter ActionVerifications by type [createdAt[lte]]",
                        "name": "createdAt[lte]",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.actionsVerificationListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create ActionVerification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "ActionVerification.Create",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "description": "Create new ActionVerification",
                        "name": "ActionVerification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ActionVerification"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.actionVerificationGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/actions-verification/{acveID}": {
            "get": {
                "description": "Get a ActionVerification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "ActionVerification.Get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter ActionVerifications by type [acveID]",
                        "name": "acveID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.actionVerificationGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update ActionVerification",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "ActionVerification.Update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "string",
                        "description": "ActionVerification ID",
                        "name": "acveID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "ActionVerification Update Body",
                        "name": "ActionVerification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.ActionVerification"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.actionVerificationGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/appointments": {
            "get": {
                "description": "Get Appointment list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Appointment.List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter Appointments by type [appoID]",
                        "name": "appoID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter Appointments by type [GstartAt]",
                        "name": "GStartAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter Appointments by type [LstartAt]",
                        "name": "LStartAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter Appointments by type [scheID]",
                        "name": "scheID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter Appointments by type [patiID]",
                        "name": "patiID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter Appointments by type [type]",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter Appointments by type [status]",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter Appointments by type [createdAt[gte]]",
                        "name": "createdAt[gte]",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter Appointments by type [createdAt[lte]]",
                        "name": "createdAt[lte]",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.appointmentsListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create Appointment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Appointment.Create",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "description": "Create new Appointment",
                        "name": "Appointment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Appointment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.appointmentGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/appointments/{appoID}": {
            "get": {
                "description": "Get a Appointment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Appointment.Get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter Appointments by type [appoID]",
                        "name": "appoID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.appointmentGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update Appointment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Appointment.Update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "string",
                        "description": "Appointment ID",
                        "name": "appoID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Appointment Update Body",
                        "name": "Appointment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Appointment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.appointmentGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/avaliability": {
            "get": {
                "description": "Check Avaliability",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Avaliability.Check",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "description": "Check Avaliability",
                        "name": "Avaliability",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Avaliability"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.avaliabilityListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/calendar": {
            "get": {
                "description": "Get Schedule Calendar",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Schedule.Calendar",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.calendarListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/configs": {
            "get": {
                "description": "Get Config list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Config.List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter Configs by type [key]",
                        "name": "key",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.configsListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create Config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Config.Create",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "description": "Create new Config",
                        "name": "Config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Config"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.configGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/configs/{key}": {
            "get": {
                "description": "Get a Config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Config.Get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter Configs by type [key]",
                        "name": "key",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.configGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update Config",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Config.Update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "string",
                        "description": "Config key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Config Update Body",
                        "name": "Config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Config"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.configGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/connect": {
            "get": {
                "description": "Socket endpoint for chat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "socket.chat"
            }
        },
        "/api/doctors": {
            "get": {
                "description": "Get Doctor list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Doctor.List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter Doctors by type [doctID]",
                        "name": "doctID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter Doctors by type [userID]",
                        "name": "userID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter Doctors by type [name]",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.doctorsListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create Doctor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Doctor.Create",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "description": "Create new Doctor",
                        "name": "Doctor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Doctor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.doctorGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/doctors-specialty": {
            "get": {
                "description": "Get DoctorSpecialty list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "DoctorSpecialty.List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter DoctorSpecialty by type [doctID]",
                        "name": "doctID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter DoctorSpecialty by type [name]",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.doctorSpecialtysListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create DoctorSpecialty",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "DoctorSpecialty.Create",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "description": "Create new DoctorSpecialty",
                        "name": "DoctorSpecialty",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.DoctorSpecialty"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.doctorSpecialtyGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/doctors-specialty/{doctID}": {
            "put": {
                "description": "Update DoctorSpecialty",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "DoctorSpecialty.Update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "string",
                        "description": "DoctorSpecialty ID",
                        "name": "doctID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "DoctorSpecialty Update Body",
                        "name": "DoctorSpecialty",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.DoctorSpecialty"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.doctorSpecialtyGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/doctors-specialty/{doctID}/{specID}": {
            "get": {
                "description": "Get a DoctorSpecialty",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "DoctorSpecialty.Get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter DoctorSpecialty by type [doctID]",
                        "name": "doctID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.doctorSpecialtyGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/doctors/{doctID}": {
            "get": {
                "description": "Get a Doctor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Doctor.Get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter Doctors by type [doctID]",
                        "name": "doctID",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.doctorGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update Doctor",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Doctor.Update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "string",
                        "description": "Doctor ID",
                        "name": "doctID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Doctor Update Body",
                        "name": "Doctor",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Doctor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.doctorGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/patients": {
            "get": {
                "description": "Get Patient list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Patient.List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter Patients by type [patiID]",
                        "name": "patiID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter Patients by type [doctID]",
                        "name": "doctID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter Patients by type [name]",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter Patients by type [email]",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter Patients by type [createdAt[gte]]",
                        "name": "createdAt[gte]",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter Patients by type [createdAt[lte]]",
                        "name": "createdAt[lte]",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.patientsListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create Patient",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Patient.Create",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "description": "Create new Patient",
                        "name": "Patient",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Patient"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.patientGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/patients/{patiID}": {
            "get": {
                "description": "Get a Patient",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Patient.Get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter Patients by type [patiID]",
                        "name": "patiID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.patientGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update Patient",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Patient.Update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "string",
                        "description": "Patient ID",
                        "name": "patiID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Patient Update Body",
                        "name": "Patient",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Patient"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.patientGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/rooms": {
            "get": {
                "description": "Get Room list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Room.List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter Rooms by type [roomID]",
                        "name": "roomID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter Rooms by type [label]",
                        "name": "label",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.roomsListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create Room",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Room.Create",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "description": "Create new Room",
                        "name": "Room",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Room"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.roomGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/rooms/{roomID}": {
            "get": {
                "description": "Get a Room",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Room.Get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter Rooms by type [roomID]",
                        "name": "roomID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.roomGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update Room",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Room.Update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "string",
                        "description": "Room ID",
                        "name": "roomID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Room Update Body",
                        "name": "Room",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Room"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.roomGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/schedules": {
            "get": {
                "description": "Get Schedule list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Schedule.List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter Schedules by type [scheID]",
                        "name": "scheID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter Schedules by type [doctID]",
                        "name": "doctID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter Schedules by type [roomID]",
                        "name": "roomID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter Schedules by type [startAt]",
                        "name": "startAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter Schedules by type [endAt]",
                        "name": "endAt",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter Schedules by type [plan]",
                        "name": "plan",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.schedulesListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create Schedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Schedule.Create",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "description": "Create new Schedule",
                        "name": "Schedule",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Schedule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.scheduleGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/schedules/{scheID}": {
            "get": {
                "description": "Get a Schedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Schedule.Get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter Schedules by type [scheID]",
                        "name": "scheID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.scheduleGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update Schedule",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Schedule.Update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "string",
                        "description": "Schedule ID",
                        "name": "scheID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Schedule Update Body",
                        "name": "Schedule",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Schedule"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.scheduleGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/specialty": {
            "get": {
                "description": "Get Specialty list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Specialty.List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter Specialty by type [specID]",
                        "name": "specID",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter Specialty by type [name]",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.specialtysListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create Specialty",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Specialty.Create",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "description": "Create new Specialty",
                        "name": "Specialty",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Specialty"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.specialtyGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/specialty/{specID}": {
            "get": {
                "description": "Get a Specialty",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Specialty.Get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Filter specialty by type [specID]",
                        "name": "specID",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.specialtyGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update Specialty",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Specialty.Update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "string",
                        "description": "Specialty ID",
                        "name": "specID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Specialty Update Body",
                        "name": "Specialty",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.Specialty"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.specialtyGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/users": {
            "get": {
                "description": "Get user list",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "users.List",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.userListResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "users.Create",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "description": "create new user",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.userGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/{userID}": {
            "get": {
                "description": "Get user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "users.Get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "get user",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.userGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "users.Update",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "format": "uuid",
                        "description": "get user",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update instution data",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/models.User"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.userGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/api/users/{userID}/push-token": {
            "post": {
                "description": "SetPushToken adds/updates the Expo push token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "users.SetPushToken",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "description": "push token",
                        "name": "requestData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.pushTokenBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.pushTokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/auth/password-recover": {
            "post": {
                "description": "Start password recovery for account with given email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "auth.PasswordReset",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "description": "Email to send reset password link",
                        "name": "email",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.passwordVerifyForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.authTokenResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/auth/password-reset/": {
            "post": {
                "description": "Reset password for account with given email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "auth.PasswordReset",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "reset id",
                        "name": "resetID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Information to reset form",
                        "name": "email",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.passwordResetForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.authResetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/auth/signin": {
            "post": {
                "description": "Login with email \u0026 password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "auth.login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "description": "Email to login with",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/handler.loginForm"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.loginOut"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/files/": {
            "post": {
                "description": "Upload digital certificate file",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "certificate.Upload",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    },
                    {
                        "description": "Update",
                        "name": "formdata",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.fileResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        },
        "/files/{file}": {
            "get": {
                "description": "Get file",
                "produces": [
                    "application/octet-stream"
                ],
                "summary": "file.Get",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Context to return",
                        "name": "context",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/handler.fileResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/handler.errorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handler.actionVerificationDelResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                }
            }
        },
        "handler.actionVerificationDeleteResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Client sets this value and server echos data in the response",
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/handler.actionVerificationDelResponse"
                }
            }
        },
        "handler.actionVerificationGetResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Client sets this value and server echos data in the response",
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/handler.actionVerificationResponse"
                }
            }
        },
        "handler.actionVerificationResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                }
            }
        },
        "handler.actionsVerificationListResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Client sets this value and server echos data in the response",
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/handler.actionsVerificationResponse"
                }
            }
        },
        "handler.actionsVerificationResponse": {
            "type": "object",
            "properties": {
                "currentItemCount": {
                    "description": "The number of items in this result set",
                    "type": "integer",
                    "example": 1
                },
                "items": {
                    "type": "string"
                },
                "itemsPerPage": {
                    "description": "The number of items in the result",
                    "type": "integer",
                    "example": 10
                },
                "kind": {
                    "type": "string"
                },
                "lang": {
                    "description": "Indicates the language of the rest of the properties in this object (BCP 47)",
                    "type": "string",
                    "example": "pt-br"
                },
                "pageIndex": {
                    "description": "The index of the current page of items",
                    "type": "integer",
                    "example": 1
                },
                "startIndex": {
                    "description": "The index of the first item in data.items",
                    "type": "integer",
                    "example": 1
                },
                "totalItems": {
                    "description": "The total number of items available in this set",
                    "type": "integer",
                    "example": 100
                },
                "totalPages": {
                    "description": "The total number of pages in the result set.",
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "handler.appointmentDelResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                }
            }
        },
        "handler.appointmentDeleteResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Client sets this value and server echos data in the response",
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/handler.appointmentDelResponse"
                }
            }
        },
        "handler.appointmentGetResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Client sets this value and server echos data in the response",
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/handler.appointmentResponse"
                }
            }
        },
        "handler.appointmentResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                }
            }
        },
        "handler.appointmentsListResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Client sets this value and server echos data in the response",
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/handler.appointmentsResponse"
                }
            }
        },
        "handler.appointmentsResponse": {
            "type": "object",
            "properties": {
                "currentItemCount": {
                    "description": "The number of items in this result set",
                    "type": "integer",
                    "example": 1
                },
                "items": {
                    "type": "string"
                },
                "itemsPerPage": {
                    "description": "The number of items in the result",
                    "type": "integer",
                    "example": 10
                },
                "kind": {
                    "type": "string"
                },
                "lang": {
                    "description": "Indicates the language of the rest of the properties in this object (BCP 47)",
                    "type": "string",
                    "example": "pt-br"
                },
                "pageIndex": {
                    "description": "The index of the current page of items",
                    "type": "integer",
                    "example": 1
                },
                "startIndex": {
                    "description": "The index of the first item in data.items",
                    "type": "integer",
                    "example": 1
                },
                "totalItems": {
                    "description": "The total number of items available in this set",
                    "type": "integer",
                    "example": 100
                },
                "totalPages": {
                    "description": "The total number of pages in the result set.",
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "handler.authResetResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Client sets this value and server echos data in the response",
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/handler.recoverResponse"
                }
            }
        },
        "handler.authToken": {
            "type": "object",
            "properties": {
                "jwt": {
                    "description": "JWT token",
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0ZXN0IjoidGVzdCJ9.MZZ7UbJRJH9hFRdBUQHpMjU4TK4XRrYP5UxcAkEHvxE."
                },
                "user": {
                    "description": "User auth data",
                    "type": "string"
                }
            }
        },
        "handler.authTokenResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Client sets this value and server echos data in the response",
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/handler.loginResponse"
                }
            }
        },
        "handler.avaliabilityListResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Client sets this value and server echos data in the response",
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/handler.avaliabilityResponse"
                }
            }
        },
        "handler.avaliabilityResponse": {
            "type": "object",
            "properties": {
                "currentItemCount": {
                    "description": "The number of items in this result set",
                    "type": "integer",
                    "example": 1
                },
                "items": {
                    "type": "string"
                },
                "itemsPerPage": {
                    "description": "The number of items in the result",
                    "type": "integer",
                    "example": 10
                },
                "kind": {
                    "type": "string"
                },
                "lang": {
                    "description": "Indicates the language of the rest of the properties in this object (BCP 47)",
                    "type": "string",
                    "example": "pt-br"
                },
                "pageIndex": {
                    "description": "The index of the current page of items",
                    "type": "integer",
                    "example": 1
                },
                "startIndex": {
                    "description": "The index of the first item in data.items",
                    "type": "integer",
                    "example": 1
                },
                "totalItems": {
                    "description": "The total number of items available in this set",
                    "type": "integer",
                    "example": 100
                },
                "totalPages": {
                    "description": "The total number of pages in the result set.",
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "handler.calendarListResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Client sets this value and server echos data in the response",
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/handler.calendarResponse"
                }
            }
        },
        "handler.calendarResponse": {
            "type": "object",
            "properties": {
                "currentItemCount": {
                    "description": "The number of items in this result set",
                    "type": "integer",
                    "example": 1
                },
                "items": {
                    "type": "string"
                },
                "itemsPerPage": {
                    "description": "The number of items in the result",
                    "type": "integer",
                    "example": 10
                },
                "kind": {
                    "type": "string"
                },
                "lang": {
                    "description": "Indicates the language of the rest of the properties in this object (BCP 47)",
                    "type": "string",
                    "example": "pt-br"
                },
                "pageIndex": {
                    "description": "The index of the current page of items",
                    "type": "integer",
                    "example": 1
                },
                "startIndex": {
                    "description": "The index of the first item in data.items",
                    "type": "integer",
                    "example": 1
                },
                "totalItems": {
                    "description": "The total number of items available in this set",
                    "type": "integer",
                    "example": 100
                },
                "totalPages": {
                    "description": "The total number of pages in the result set.",
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "handler.configDelResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                }
            }
        },
        "handler.configDeleteResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Client sets this value and server echos data in the response",
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/handler.configDelResponse"
                }
            }
        },
        "handler.configGetResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Client sets this value and server echos data in the response",
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/handler.configResponse"
                }
            }
        },
        "handler.configResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                }
            }
        },
        "handler.configsListResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Client sets this value and server echos data in the response",
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/handler.configsResponse"
                }
            }
        },
        "handler.configsResponse": {
            "type": "object",
            "properties": {
                "currentItemCount": {
                    "description": "The number of items in this result set",
                    "type": "integer",
                    "example": 1
                },
                "items": {
                    "type": "string"
                },
                "itemsPerPage": {
                    "description": "The number of items in the result",
                    "type": "integer",
                    "example": 10
                },
                "kind": {
                    "type": "string"
                },
                "lang": {
                    "description": "Indicates the language of the rest of the properties in this object (BCP 47)",
                    "type": "string",
                    "example": "pt-br"
                },
                "pageIndex": {
                    "description": "The index of the current page of items",
                    "type": "integer",
                    "example": 1
                },
                "startIndex": {
                    "description": "The index of the first item in data.items",
                    "type": "integer",
                    "example": 1
                },
                "totalItems": {
                    "description": "The total number of items available in this set",
                    "type": "integer",
                    "example": 100
                },
                "totalPages": {
                    "description": "The total number of pages in the result set.",
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "handler.dataer": {
            "type": "object"
        },
        "handler.detailError": {
            "type": "object",
            "properties": {
                "domain": {
                    "type": "string"
                },
                "extendedHelp": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "locationType": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "sendReport": {
                    "type": "string"
                }
            }
        },
        "handler.doctorDelResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                }
            }
        },
        "handler.doctorDeleteResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Client sets this value and server echos data in the response",
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/handler.doctorDelResponse"
                }
            }
        },
        "handler.doctorGetResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Client sets this value and server echos data in the response",
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/handler.doctorResponse"
                }
            }
        },
        "handler.doctorResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                }
            }
        },
        "handler.doctorSpecialtyDelResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                }
            }
        },
        "handler.doctorSpecialtyDeleteResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Client sets this value and server echos data in the response",
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/handler.doctorSpecialtyDelResponse"
                }
            }
        },
        "handler.doctorSpecialtyGetResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Client sets this value and server echos data in the response",
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/handler.doctorSpecialtyResponse"
                }
            }
        },
        "handler.doctorSpecialtyResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                }
            }
        },
        "handler.doctorSpecialtysListResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Client sets this value and server echos data in the response",
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/handler.doctorSpecialtysResponse"
                }
            }
        },
        "handler.doctorSpecialtysResponse": {
            "type": "object",
            "properties": {
                "currentItemCount": {
                    "description": "The number of items in this result set",
                    "type": "integer",
                    "example": 1
                },
                "items": {
                    "type": "string"
                },
                "itemsPerPage": {
                    "description": "The number of items in the result",
                    "type": "integer",
                    "example": 10
                },
                "kind": {
                    "type": "string"
                },
                "lang": {
                    "description": "Indicates the language of the rest of the properties in this object (BCP 47)",
                    "type": "string",
                    "example": "pt-br"
                },
                "pageIndex": {
                    "description": "The index of the current page of items",
                    "type": "integer",
                    "example": 1
                },
                "startIndex": {
                    "description": "The index of the first item in data.items",
                    "type": "integer",
                    "example": 1
                },
                "totalItems": {
                    "description": "The total number of items available in this set",
                    "type": "integer",
                    "example": 100
                },
                "totalPages": {
                    "description": "The total number of pages in the result set.",
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "handler.doctorsListResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Client sets this value and server echos data in the response",
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/handler.doctorsResponse"
                }
            }
        },
        "handler.doctorsResponse": {
            "type": "object",
            "properties": {
                "currentItemCount": {
                    "description": "The number of items in this result set",
                    "type": "integer",
                    "example": 1
                },
                "items": {
                    "type": "string"
                },
                "itemsPerPage": {
                    "description": "The number of items in the result",
                    "type": "integer",
                    "example": 10
                },
                "kind": {
                    "type": "string"
                },
                "lang": {
                    "description": "Indicates the language of the rest of the properties in this object (BCP 47)",
                    "type": "string",
                    "example": "pt-br"
                },
                "pageIndex": {
                    "description": "The index of the current page of items",
                    "type": "integer",
                    "example": 1
                },
                "startIndex": {
                    "description": "The index of the first item in data.items",
                    "type": "integer",
                    "example": 1
                },
                "totalItems": {
                    "description": "The total number of items available in this set",
                    "type": "integer",
                    "example": 100
                },
                "totalPages": {
                    "description": "The total number of pages in the result set.",
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "handler.errorResponse": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "object",
                    "$ref": "#/definitions/handler.generalError"
                }
            }
        },
        "handler.fileResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Client sets this value and server echos data in the response",
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/handler.fileUpload"
                }
            }
        },
        "handler.fileResult": {
            "type": "object",
            "properties": {
                "filename": {
                    "type": "string"
                }
            }
        },
        "handler.fileUpload": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "object",
                    "$ref": "#/definitions/handler.fileResult"
                },
                "kind": {
                    "description": "The kind property serves as a guide to what type of information this particular object stores",
                    "type": "string",
                    "example": "resource"
                },
                "lang": {
                    "description": "Indicates the language of the rest of the properties in this object (BCP 47)",
                    "type": "string",
                    "example": "pt-br"
                }
            }
        },
        "handler.generalError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "errors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handler.detailError"
                    }
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.loginForm": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "description": "Username string `json:\"username\" binding:\"required\" example:\"username\"`",
                    "type": "string",
                    "example": "user@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "mypassword123"
                }
            }
        },
        "handler.loginOut": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "object",
                    "$ref": "#/definitions/handler.authToken"
                },
                "kind": {
                    "type": "string",
                    "example": "authToken"
                },
                "lang": {
                    "description": "Indicates the language of the rest of the properties in this object (BCP 47)",
                    "type": "string",
                    "example": "pt-br"
                }
            }
        },
        "handler.loginResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Client sets this value and server echos data in the response",
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/handler.loginOut"
                }
            }
        },
        "handler.passwordResetForm": {
            "type": "object",
            "required": [
                "password",
                "verification"
            ],
            "properties": {
                "password": {
                    "type": "string",
                    "example": "password"
                },
                "verification": {
                    "type": "string",
                    "example": "$2y$12$F/npgjvknmHkNvDck15aeew..."
                }
            }
        },
        "handler.passwordVerifyForm": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "user@example.com"
                }
            }
        },
        "handler.patientDelResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                }
            }
        },
        "handler.patientDeleteResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Client sets this value and server echos data in the response",
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/handler.patientDelResponse"
                }
            }
        },
        "handler.patientGetResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Client sets this value and server echos data in the response",
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/handler.patientResponse"
                }
            }
        },
        "handler.patientResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                }
            }
        },
        "handler.patientsListResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Client sets this value and server echos data in the response",
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/handler.patientsResponse"
                }
            }
        },
        "handler.patientsResponse": {
            "type": "object",
            "properties": {
                "currentItemCount": {
                    "description": "The number of items in this result set",
                    "type": "integer",
                    "example": 1
                },
                "items": {
                    "type": "string"
                },
                "itemsPerPage": {
                    "description": "The number of items in the result",
                    "type": "integer",
                    "example": 10
                },
                "kind": {
                    "type": "string"
                },
                "lang": {
                    "description": "Indicates the language of the rest of the properties in this object (BCP 47)",
                    "type": "string",
                    "example": "pt-br"
                },
                "pageIndex": {
                    "description": "The index of the current page of items",
                    "type": "integer",
                    "example": 1
                },
                "startIndex": {
                    "description": "The index of the first item in data.items",
                    "type": "integer",
                    "example": 1
                },
                "totalItems": {
                    "description": "The total number of items available in this set",
                    "type": "integer",
                    "example": 100
                },
                "totalPages": {
                    "description": "The total number of pages in the result set.",
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "handler.pushTokenBody": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "handler.pushTokenData": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "lang": {
                    "description": "Indicates the language of the rest of the properties in this object (BCP 47)",
                    "type": "string",
                    "example": "pt-br"
                }
            }
        },
        "handler.pushTokenResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Client sets this value and server echos data in the response",
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/handler.pushTokenData"
                }
            }
        },
        "handler.recoverResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "string"
                },
                "kind": {
                    "type": "string",
                    "example": "Email"
                },
                "lang": {
                    "description": "Indicates the language of the rest of the properties in this object (BCP 47)",
                    "type": "string",
                    "example": "pt-br"
                }
            }
        },
        "handler.roomDelResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                }
            }
        },
        "handler.roomDeleteResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Client sets this value and server echos data in the response",
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/handler.roomDelResponse"
                }
            }
        },
        "handler.roomGetResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Client sets this value and server echos data in the response",
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/handler.roomResponse"
                }
            }
        },
        "handler.roomResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                }
            }
        },
        "handler.roomsListResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Client sets this value and server echos data in the response",
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/handler.roomsResponse"
                }
            }
        },
        "handler.roomsResponse": {
            "type": "object",
            "properties": {
                "currentItemCount": {
                    "description": "The number of items in this result set",
                    "type": "integer",
                    "example": 1
                },
                "items": {
                    "type": "string"
                },
                "itemsPerPage": {
                    "description": "The number of items in the result",
                    "type": "integer",
                    "example": 10
                },
                "kind": {
                    "type": "string"
                },
                "lang": {
                    "description": "Indicates the language of the rest of the properties in this object (BCP 47)",
                    "type": "string",
                    "example": "pt-br"
                },
                "pageIndex": {
                    "description": "The index of the current page of items",
                    "type": "integer",
                    "example": 1
                },
                "startIndex": {
                    "description": "The index of the first item in data.items",
                    "type": "integer",
                    "example": 1
                },
                "totalItems": {
                    "description": "The total number of items available in this set",
                    "type": "integer",
                    "example": 100
                },
                "totalPages": {
                    "description": "The total number of pages in the result set.",
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "handler.scheduleDelResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                }
            }
        },
        "handler.scheduleDeleteResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Client sets this value and server echos data in the response",
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/handler.scheduleDelResponse"
                }
            }
        },
        "handler.scheduleGetResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Client sets this value and server echos data in the response",
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/handler.scheduleResponse"
                }
            }
        },
        "handler.scheduleResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                }
            }
        },
        "handler.schedulesListResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Client sets this value and server echos data in the response",
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/handler.schedulesResponse"
                }
            }
        },
        "handler.schedulesResponse": {
            "type": "object",
            "properties": {
                "currentItemCount": {
                    "description": "The number of items in this result set",
                    "type": "integer",
                    "example": 1
                },
                "items": {
                    "type": "string"
                },
                "itemsPerPage": {
                    "description": "The number of items in the result",
                    "type": "integer",
                    "example": 10
                },
                "kind": {
                    "type": "string"
                },
                "lang": {
                    "description": "Indicates the language of the rest of the properties in this object (BCP 47)",
                    "type": "string",
                    "example": "pt-br"
                },
                "pageIndex": {
                    "description": "The index of the current page of items",
                    "type": "integer",
                    "example": 1
                },
                "startIndex": {
                    "description": "The index of the first item in data.items",
                    "type": "integer",
                    "example": 1
                },
                "totalItems": {
                    "description": "The total number of items available in this set",
                    "type": "integer",
                    "example": 100
                },
                "totalPages": {
                    "description": "The total number of pages in the result set.",
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "handler.specialtyDelResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                }
            }
        },
        "handler.specialtyDeleteResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Client sets this value and server echos data in the response",
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/handler.specialtyDelResponse"
                }
            }
        },
        "handler.specialtyGetResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Client sets this value and server echos data in the response",
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/handler.specialtyResponse"
                }
            }
        },
        "handler.specialtyResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                }
            }
        },
        "handler.specialtysListResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Client sets this value and server echos data in the response",
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/handler.specialtysResponse"
                }
            }
        },
        "handler.specialtysResponse": {
            "type": "object",
            "properties": {
                "currentItemCount": {
                    "description": "The number of items in this result set",
                    "type": "integer",
                    "example": 1
                },
                "items": {
                    "type": "string"
                },
                "itemsPerPage": {
                    "description": "The number of items in the result",
                    "type": "integer",
                    "example": 10
                },
                "kind": {
                    "type": "string"
                },
                "lang": {
                    "description": "Indicates the language of the rest of the properties in this object (BCP 47)",
                    "type": "string",
                    "example": "pt-br"
                },
                "pageIndex": {
                    "description": "The index of the current page of items",
                    "type": "integer",
                    "example": 1
                },
                "startIndex": {
                    "description": "The index of the first item in data.items",
                    "type": "integer",
                    "example": 1
                },
                "totalItems": {
                    "description": "The total number of items available in this set",
                    "type": "integer",
                    "example": 100
                },
                "totalPages": {
                    "description": "The total number of pages in the result set.",
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "handler.userGetResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Client sets this value and server echos data in the response",
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/handler.userResponse"
                }
            }
        },
        "handler.userListResponse": {
            "type": "object",
            "properties": {
                "context": {
                    "description": "Client sets this value and server echos data in the response",
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "$ref": "#/definitions/handler.usersResponse"
                }
            }
        },
        "handler.userResponse": {
            "type": "object",
            "properties": {
                "item": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "lang": {
                    "description": "Indicates the language of the rest of the properties in this object (BCP 47)",
                    "type": "string",
                    "example": "pt-br"
                }
            }
        },
        "handler.usersResponse": {
            "type": "object",
            "properties": {
                "currentItemCount": {
                    "description": "The number of items in this result set",
                    "type": "integer",
                    "example": 1
                },
                "items": {
                    "type": "string"
                },
                "itemsPerPage": {
                    "description": "The number of items in the result",
                    "type": "integer",
                    "example": 10
                },
                "kind": {
                    "type": "string"
                },
                "lang": {
                    "description": "Indicates the language of the rest of the properties in this object (BCP 47)",
                    "type": "string",
                    "example": "pt-br"
                },
                "pageIndex": {
                    "description": "The index of the current page of items",
                    "type": "integer",
                    "example": 1
                },
                "startIndex": {
                    "description": "The index of the first item in data.items",
                    "type": "integer",
                    "example": 1
                },
                "totalItems": {
                    "description": "The total number of items available in this set",
                    "type": "integer",
                    "example": 100
                },
                "totalPages": {
                    "description": "The total number of pages in the result set.",
                    "type": "integer",
                    "example": 10
                }
            }
        },
        "models.ActionVerification": {
            "type": "object",
            "properties": {
                "acveID": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                },
                "verification": {
                    "type": "string"
                }
            }
        },
        "models.Appointment": {
            "type": "object",
            "properties": {
                "appoID": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "patiID": {
                    "type": "string"
                },
                "scheID": {
                    "type": "string"
                },
                "startAt": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.Avaliability": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "doctID": {
                    "type": "string"
                },
                "doctName": {
                    "type": "string"
                },
                "slots": {
                    "type": "string"
                }
            }
        },
        "models.Config": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "models.Doctor": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "doctID": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "inactiveAt": {
                    "type": "string"
                },
                "info": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "roles": {
                    "type": "object",
                    "$ref": "#/definitions/models.UserRole"
                },
                "updateAt": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "models.DoctorSpecialty": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "doctID": {
                    "type": "string"
                },
                "specID": {
                    "type": "integer"
                }
            }
        },
        "models.Patient": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "doctID": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "info": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "patiID": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "models.Room": {
            "type": "object",
            "properties": {
                "label": {
                    "type": "string"
                },
                "roomID": {
                    "type": "string"
                }
            }
        },
        "models.Schedule": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "doctID": {
                    "type": "string"
                },
                "endAt": {
                    "type": "string"
                },
                "info": {
                    "type": "string"
                },
                "plan": {
                    "type": "string"
                },
                "roomID": {
                    "type": "string"
                },
                "scheID": {
                    "type": "string"
                },
                "startAt": {
                    "type": "string"
                }
            }
        },
        "models.Specialty": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "specID": {
                    "type": "integer"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "inactiveAt": {
                    "type": "string"
                },
                "roles": {
                    "type": "object",
                    "$ref": "#/definitions/models.UserRole"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "models.UserRole": {
            "type": "array",
            "items": {}
        }
    }
}